services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_NAMES=PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092

      - KAFKA_LISTENER_INTER_BROKER_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_INTER_BROKER_PORT=9093
      - KAFKA_LISTENER_INTER_BROKER_HOSTNAME=kafka

      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093

      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=notification_rest_api
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    image: kafkanotificationrestapi:latest
    container_name: kafkanotificationrestapi
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_NAME=notification_rest_api
    ports:
      - "8088:8088"
    depends_on:
      - postgres
      - kafka
    command: ["./wait-for-it.sh", "postgres:5432", "--", "java", "-jar", "/app.jar"]

volumes:
  postgres-data:
    driver: local